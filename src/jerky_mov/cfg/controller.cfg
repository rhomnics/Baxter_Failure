#!/usr/bin/env python

PACKAGE = "jerky_mov"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

min_val = -100
max_val = 100

#proportional terms
gen.add('left_s0_p', double_t, 0, "proportional term for s0",25, min_val, max_val)
gen.add('left_s1_p', double_t, 0, "proportional term for s1",60, min_val, max_val)
gen.add('left_e0_p', double_t, 0, "proportional term for e0",40, min_val, max_val)
gen.add('left_e1_p', double_t, 0, "proportional term for e1",24, min_val, max_val)
gen.add('left_w0_p', double_t, 0, "proportional term for w0",7.2,  min_val, max_val)
gen.add('left_w1_p', double_t, 0, "proportional term for w1",10,  min_val, max_val)
gen.add('left_w2_p', double_t, 0, "proportional term for w2",2.5,  min_val, max_val)

gen.add('right_s0_p', double_t, 0, "proportional term for s0",25, min_val, max_val)
gen.add('right_s1_p', double_t, 0, "proportional term for s1",60, min_val, max_val)
gen.add('right_e0_p', double_t, 0, "proportional term for e0",40, min_val, max_val)
gen.add('right_e1_p', double_t, 0, "proportional term for e1",24, min_val, max_val)
gen.add('right_w0_p', double_t, 0, "proportional term for w0",7.2,  min_val, max_val)
gen.add('right_w1_p', double_t, 0, "proportional term for w1",10,  min_val, max_val)
gen.add('right_w2_p', double_t, 0, "proportional term for w2",2.5,  min_val, max_val)

#derivative terms
gen.add('left_s0_d', double_t, 0, "derivative term for s0", 8.0   ,min_val, max_val)
gen.add('left_s1_d', double_t, 0, "derivative term for s1", 7.5   ,min_val, max_val)
gen.add('left_e0_d', double_t, 0, "derivative term for e0", 3.0   ,min_val, max_val)
gen.add('left_e1_d', double_t, 0, "derivative term for e1", 3.0   ,min_val, max_val)
gen.add('left_w0_d', double_t, 0, "derivative term for w0", 0.5   ,min_val, max_val)
gen.add('left_w1_d', double_t, 0, "derivative term for w1", 0.8   ,min_val, max_val)
gen.add('left_w2_d', double_t, 0, "derivative term for w2", 0.4   ,min_val, max_val)

gen.add('right_s0_d', double_t, 0, "derivative term for s0", 8.0   ,min_val, max_val)
gen.add('right_s1_d', double_t, 0, "derivative term for s1", 7.5   ,min_val, max_val)
gen.add('right_e0_d', double_t, 0, "derivative term for e0", 3.0   ,min_val, max_val)
gen.add('right_e1_d', double_t, 0, "derivative term for e1", 3.0   ,min_val, max_val)
gen.add('right_w0_d', double_t, 0, "derivative term for w0", 0.5   ,min_val, max_val)
gen.add('right_w1_d', double_t, 0, "derivative term for w1", 0.8   ,min_val, max_val)
gen.add('right_w2_d', double_t, 0, "derivative term for w2", 0.4   ,min_val, max_val)

#integral terms
gen.add('left_s0_i', double_t, 0, "integral term for s0", 1,    min_val, max_val)
gen.add('left_s1_i', double_t, 0, "integral term for s1", 0.5,    min_val, max_val)
gen.add('left_e0_i', double_t, 0, "integral term for e0", 0.1,    min_val, max_val)
gen.add('left_e1_i', double_t, 0, "integral term for e1", 1.0,    min_val, max_val)
gen.add('left_w0_i', double_t, 0, "integral term for w0", 0.1,    min_val, max_val)
gen.add('left_w1_i', double_t, 0, "integral term for w1", 1,    min_val, max_val)
gen.add('left_w2_i', double_t, 0, "integral term for w2", 0.2,    min_val, max_val)

gen.add('right_s0_i', double_t, 0, "integral term for s0", 1,    min_val, max_val)
gen.add('right_s1_i', double_t, 0, "integral term for s1", 0.5,    min_val, max_val)
gen.add('right_e0_i', double_t, 0, "integral term for e0", 0.1,    min_val, max_val)
gen.add('right_e1_i', double_t, 0, "integral term for e1", 1.0,    min_val, max_val)
gen.add('right_w0_i', double_t, 0, "integral term for w0", 0.1,    min_val, max_val)
gen.add('right_w1_i', double_t, 0, "integral term for w1", 1,    min_val, max_val)
gen.add('right_w2_i', double_t, 0, "integral term for w2", 0.2,    min_val, max_val)

exit(gen.generate(PACKAGE, "controller", "arm"))